Terminals unused in grammar

   VAR
   DIGIT
   LETER
   COMMENT
   DIVIDE
   INTEGER_VAL
   BOOL_VAL


Grammar

    0 $accept: goal END

    1 goal: main_class END
    2     | main_class class_s END

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    4 class_s: class_s class
    5        | class

    6 class: CLASS id L_BRACKET R_BRACKET
    7      | CLASS id L_BRACKET var_s R_BRACKET
    8      | CLASS id L_BRACKET method_s R_BRACKET
    9      | CLASS id L_BRACKET var_s method_s R_BRACKET
   10      | CLASS id EXTENDS L_BRACKET R_BRACKET
   11      | CLASS id EXTENDS L_BRACKET var_s R_BRACKET
   12      | CLASS id EXTENDS L_BRACKET method_s R_BRACKET
   13      | CLASS id EXTENDS L_BRACKET var_s method_s R_BRACKET

   14 var_s: var_s var
   15      | var

   16 var: type id SEMICOLON

   17 method_s: method_s method
   18         | method

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET

   23 arg_s: %empty
   24      | arg_s COMMA type id
   25      | type id

   26 modifier: PUBLIC
   27         | PRIVATE

   28 type: INT L_SQUARE R_SQUARE
   29     | BOOLEAN
   30     | INT
   31     | id

   32 statement_s: statement_s statement
   33            | statement

   34 statement: L_BRACKET statement_s R_BRACKET
   35          | IF L_ROUND exp R_ROUND statement ELSE statement
   36          | WHILE L_ROUND exp R_ROUND statement
   37          | SYSTEMOUTPRINTLN L_ROUND exp R_ROUND SEMICOLON
   38          | id EQUALS exp SEMICOLON
   39          | id L_SQUARE exp R_SQUARE EQUALS exp SEMICOLON

   40 exp_s: exp_s COMMA exp
   41      | exp

   42 exp: exp AND exp
   43    | exp LESS exp
   44    | exp PLUS exp
   45    | exp MINUS exp
   46    | exp STAR exp
   47    | exp PERCENT exp
   48    | exp OR exp
   49    | exp L_SQUARE exp R_SQUARE
   50    | exp DOT LENGTH
   51    | exp DOT id L_ROUND R_ROUND
   52    | exp DOT id L_ROUND exp_s R_ROUND
   53    | INTEGER
   54    | TRUE
   55    | FALSE
   56    | id
   57    | THIS
   58    | NEW INT L_SQUARE exp R_SQUARE
   59    | NEW id L_ROUND R_ROUND
   60    | BANG exp
   61    | L_ROUND exp R_ROUND

   62 id: ID


Terminals, with rules where they appear

END (0) 0 1 2
error (256)
CLASS (258) 3 6 7 8 9 10 11 12 13
VAR (259)
EXTENDS (260) 10 11 12 13
PUBLIC (261) 3 26
PRIVATE (262) 27
STATICVOIDMAIN (263) 3
STRING (264) 3
INT (265) 28 30 58
INTEGER (266) 53
BOOLEAN (267) 29
IF (268) 35
ELSE (269) 35
WHILE (270) 36
SYSTEMOUTPRINTLN (271) 37
LENGTH (272) 50
TRUE (273) 54
FALSE (274) 55
NEW (275) 58 59
THIS (276) 57
RETURN (277) 19 20 21 22
DIGIT (278)
LETER (279)
ID (280) 62
COMMENT (281)
L_BRACKET (282) 3 6 7 8 9 10 11 12 13 19 20 21 22 34
R_BRACKET (283) 3 6 7 8 9 10 11 12 13 19 20 21 22 34
L_ROUND (284) 3 19 20 21 22 35 36 37 51 52 59 61
R_ROUND (285) 3 19 20 21 22 35 36 37 51 52 59 61
L_SQUARE (286) 3 28 39 49 58
R_SQUARE (287) 3 28 39 49 58
SEMICOLON (288) 16 19 20 21 22 37 38 39
MINUS (289) 45
PLUS (290) 44
PERCENT (291) 47
DIVIDE (292)
EQUALS (293) 38 39
COMMA (294) 24 40
DOT (295) 50 51 52
STAR (296) 46
LESS (297) 43
BANG (298) 60
AND (299) 42
OR (300) 48
INTEGER_VAL (301)
BOOL_VAL (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
goal (49)
    on left: 1 2, on right: 0
main_class (50)
    on left: 3, on right: 1 2
class_s (51)
    on left: 4 5, on right: 2 4
class (52)
    on left: 6 7 8 9 10 11 12 13, on right: 4 5
var_s (53)
    on left: 14 15, on right: 7 9 11 13 14 19 20
var (54)
    on left: 16, on right: 14 15
method_s (55)
    on left: 17 18, on right: 8 9 12 13 17
method (56)
    on left: 19 20 21 22, on right: 17 18
arg_s (57)
    on left: 23 24 25, on right: 19 20 21 22 24
modifier (58)
    on left: 26 27, on right: 19 20 21 22
type (59)
    on left: 28 29 30 31, on right: 16 19 20 21 22 24 25
statement_s (60)
    on left: 32 33, on right: 3 19 21 32 34
statement (61)
    on left: 34 35 36 37 38 39, on right: 32 33 35 36
exp_s (62)
    on left: 40 41, on right: 40 52
exp (63)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61, on right: 19 20 21 22 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 58 60 61
id (64)
    on left: 62, on right: 3 6 7 8 9 10 11 12 13 16 19 20 21 22 24
    25 31 38 39 51 52 56 59


State 0

    0 $accept: . goal END

    CLASS  shift, and go to state 1

    goal        go to state 2
    main_class  go to state 3


State 1

    3 main_class: CLASS . id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    ID  shift, and go to state 4

    id  go to state 5


State 2

    0 $accept: goal . END

    END  shift, and go to state 6


State 3

    1 goal: main_class . END
    2     | main_class . class_s END

    END    shift, and go to state 7
    CLASS  shift, and go to state 8

    class_s  go to state 9
    class    go to state 10


State 4

   62 id: ID .

    $default  reduce using rule 62 (id)


State 5

    3 main_class: CLASS id . L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    L_BRACKET  shift, and go to state 11


State 6

    0 $accept: goal END .

    $default  accept


State 7

    1 goal: main_class END .

    $default  reduce using rule 1 (goal)


State 8

    6 class: CLASS . id L_BRACKET R_BRACKET
    7      | CLASS . id L_BRACKET var_s R_BRACKET
    8      | CLASS . id L_BRACKET method_s R_BRACKET
    9      | CLASS . id L_BRACKET var_s method_s R_BRACKET
   10      | CLASS . id EXTENDS L_BRACKET R_BRACKET
   11      | CLASS . id EXTENDS L_BRACKET var_s R_BRACKET
   12      | CLASS . id EXTENDS L_BRACKET method_s R_BRACKET
   13      | CLASS . id EXTENDS L_BRACKET var_s method_s R_BRACKET

    ID  shift, and go to state 4

    id  go to state 12


State 9

    2 goal: main_class class_s . END
    4 class_s: class_s . class

    END    shift, and go to state 13
    CLASS  shift, and go to state 8

    class  go to state 14


State 10

    5 class_s: class .

    $default  reduce using rule 5 (class_s)


State 11

    3 main_class: CLASS id L_BRACKET . PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    PUBLIC  shift, and go to state 15


State 12

    6 class: CLASS id . L_BRACKET R_BRACKET
    7      | CLASS id . L_BRACKET var_s R_BRACKET
    8      | CLASS id . L_BRACKET method_s R_BRACKET
    9      | CLASS id . L_BRACKET var_s method_s R_BRACKET
   10      | CLASS id . EXTENDS L_BRACKET R_BRACKET
   11      | CLASS id . EXTENDS L_BRACKET var_s R_BRACKET
   12      | CLASS id . EXTENDS L_BRACKET method_s R_BRACKET
   13      | CLASS id . EXTENDS L_BRACKET var_s method_s R_BRACKET

    EXTENDS    shift, and go to state 16
    L_BRACKET  shift, and go to state 17


State 13

    2 goal: main_class class_s END .

    $default  reduce using rule 2 (goal)


State 14

    4 class_s: class_s class .

    $default  reduce using rule 4 (class_s)


State 15

    3 main_class: CLASS id L_BRACKET PUBLIC . STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    STATICVOIDMAIN  shift, and go to state 18


State 16

   10 class: CLASS id EXTENDS . L_BRACKET R_BRACKET
   11      | CLASS id EXTENDS . L_BRACKET var_s R_BRACKET
   12      | CLASS id EXTENDS . L_BRACKET method_s R_BRACKET
   13      | CLASS id EXTENDS . L_BRACKET var_s method_s R_BRACKET

    L_BRACKET  shift, and go to state 19


State 17

    6 class: CLASS id L_BRACKET . R_BRACKET
    7      | CLASS id L_BRACKET . var_s R_BRACKET
    8      | CLASS id L_BRACKET . method_s R_BRACKET
    9      | CLASS id L_BRACKET . var_s method_s R_BRACKET

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    INT        shift, and go to state 22
    BOOLEAN    shift, and go to state 23
    ID         shift, and go to state 4
    R_BRACKET  shift, and go to state 24

    var_s     go to state 25
    var       go to state 26
    method_s  go to state 27
    method    go to state 28
    modifier  go to state 29
    type      go to state 30
    id        go to state 31


State 18

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN . L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    L_ROUND  shift, and go to state 32


State 19

   10 class: CLASS id EXTENDS L_BRACKET . R_BRACKET
   11      | CLASS id EXTENDS L_BRACKET . var_s R_BRACKET
   12      | CLASS id EXTENDS L_BRACKET . method_s R_BRACKET
   13      | CLASS id EXTENDS L_BRACKET . var_s method_s R_BRACKET

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    INT        shift, and go to state 22
    BOOLEAN    shift, and go to state 23
    ID         shift, and go to state 4
    R_BRACKET  shift, and go to state 33

    var_s     go to state 34
    var       go to state 26
    method_s  go to state 35
    method    go to state 28
    modifier  go to state 29
    type      go to state 30
    id        go to state 31


State 20

   26 modifier: PUBLIC .

    $default  reduce using rule 26 (modifier)


State 21

   27 modifier: PRIVATE .

    $default  reduce using rule 27 (modifier)


State 22

   28 type: INT . L_SQUARE R_SQUARE
   30     | INT .

    L_SQUARE  shift, and go to state 36

    $default  reduce using rule 30 (type)


State 23

   29 type: BOOLEAN .

    $default  reduce using rule 29 (type)


State 24

    6 class: CLASS id L_BRACKET R_BRACKET .

    $default  reduce using rule 6 (class)


State 25

    7 class: CLASS id L_BRACKET var_s . R_BRACKET
    9      | CLASS id L_BRACKET var_s . method_s R_BRACKET
   14 var_s: var_s . var

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    INT        shift, and go to state 22
    BOOLEAN    shift, and go to state 23
    ID         shift, and go to state 4
    R_BRACKET  shift, and go to state 37

    var       go to state 38
    method_s  go to state 39
    method    go to state 28
    modifier  go to state 29
    type      go to state 30
    id        go to state 31


State 26

   15 var_s: var .

    $default  reduce using rule 15 (var_s)


State 27

    8 class: CLASS id L_BRACKET method_s . R_BRACKET
   17 method_s: method_s . method

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    R_BRACKET  shift, and go to state 40

    method    go to state 41
    modifier  go to state 29


State 28

   18 method_s: method .

    $default  reduce using rule 18 (method_s)


State 29

   19 method: modifier . type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier . type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier . type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier . type id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET

    INT      shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    ID       shift, and go to state 4

    type  go to state 42
    id    go to state 31


State 30

   16 var: type . id SEMICOLON

    ID  shift, and go to state 4

    id  go to state 43


State 31

   31 type: id .

    $default  reduce using rule 31 (type)


State 32

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND . STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    STRING  shift, and go to state 44


State 33

   10 class: CLASS id EXTENDS L_BRACKET R_BRACKET .

    $default  reduce using rule 10 (class)


State 34

   11 class: CLASS id EXTENDS L_BRACKET var_s . R_BRACKET
   13      | CLASS id EXTENDS L_BRACKET var_s . method_s R_BRACKET
   14 var_s: var_s . var

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    INT        shift, and go to state 22
    BOOLEAN    shift, and go to state 23
    ID         shift, and go to state 4
    R_BRACKET  shift, and go to state 45

    var       go to state 38
    method_s  go to state 46
    method    go to state 28
    modifier  go to state 29
    type      go to state 30
    id        go to state 31


State 35

   12 class: CLASS id EXTENDS L_BRACKET method_s . R_BRACKET
   17 method_s: method_s . method

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    R_BRACKET  shift, and go to state 47

    method    go to state 41
    modifier  go to state 29


State 36

   28 type: INT L_SQUARE . R_SQUARE

    R_SQUARE  shift, and go to state 48


State 37

    7 class: CLASS id L_BRACKET var_s R_BRACKET .

    $default  reduce using rule 7 (class)


State 38

   14 var_s: var_s var .

    $default  reduce using rule 14 (var_s)


State 39

    9 class: CLASS id L_BRACKET var_s method_s . R_BRACKET
   17 method_s: method_s . method

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    R_BRACKET  shift, and go to state 49

    method    go to state 41
    modifier  go to state 29


State 40

    8 class: CLASS id L_BRACKET method_s R_BRACKET .

    $default  reduce using rule 8 (class)


State 41

   17 method_s: method_s method .

    $default  reduce using rule 17 (method_s)


State 42

   19 method: modifier type . id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type . id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type . id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type . id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET

    ID  shift, and go to state 4

    id  go to state 50


State 43

   16 var: type id . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 44

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING . L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    L_SQUARE  shift, and go to state 52


State 45

   11 class: CLASS id EXTENDS L_BRACKET var_s R_BRACKET .

    $default  reduce using rule 11 (class)


State 46

   13 class: CLASS id EXTENDS L_BRACKET var_s method_s . R_BRACKET
   17 method_s: method_s . method

    PUBLIC     shift, and go to state 20
    PRIVATE    shift, and go to state 21
    R_BRACKET  shift, and go to state 53

    method    go to state 41
    modifier  go to state 29


State 47

   12 class: CLASS id EXTENDS L_BRACKET method_s R_BRACKET .

    $default  reduce using rule 12 (class)


State 48

   28 type: INT L_SQUARE R_SQUARE .

    $default  reduce using rule 28 (type)


State 49

    9 class: CLASS id L_BRACKET var_s method_s R_BRACKET .

    $default  reduce using rule 9 (class)


State 50

   19 method: modifier type id . L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id . L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id . L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id . L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET

    L_ROUND  shift, and go to state 54


State 51

   16 var: type id SEMICOLON .

    $default  reduce using rule 16 (var)


State 52

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE . R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    R_SQUARE  shift, and go to state 55


State 53

   13 class: CLASS id EXTENDS L_BRACKET var_s method_s R_BRACKET .

    $default  reduce using rule 13 (class)


State 54

   19 method: modifier type id L_ROUND . arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND . arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id L_ROUND . arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id L_ROUND . arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET

    INT      shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    ID       shift, and go to state 4

    $default  reduce using rule 23 (arg_s)

    arg_s  go to state 56
    type   go to state 57
    id     go to state 31


State 55

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE . id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    ID  shift, and go to state 4

    id  go to state 58


State 56

   19 method: modifier type id L_ROUND arg_s . R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND arg_s . R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id L_ROUND arg_s . R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id L_ROUND arg_s . R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET
   24 arg_s: arg_s . COMMA type id

    R_ROUND  shift, and go to state 59
    COMMA    shift, and go to state 60


State 57

   25 arg_s: type . id

    ID  shift, and go to state 4

    id  go to state 61


State 58

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id . R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET

    R_ROUND  shift, and go to state 62


State 59

   19 method: modifier type id L_ROUND arg_s R_ROUND . L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND arg_s R_ROUND . L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id L_ROUND arg_s R_ROUND . L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id L_ROUND arg_s R_ROUND . L_BRACKET RETURN exp SEMICOLON R_BRACKET

    L_BRACKET  shift, and go to state 63


State 60

   24 arg_s: arg_s COMMA . type id

    INT      shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    ID       shift, and go to state 4

    type  go to state 64
    id    go to state 31


State 61

   25 arg_s: type id .

    $default  reduce using rule 25 (arg_s)


State 62

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND . L_BRACKET statement_s R_BRACKET R_BRACKET

    L_BRACKET  shift, and go to state 65


State 63

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET . var_s statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET . var_s RETURN exp SEMICOLON R_BRACKET
   21       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET . statement_s RETURN exp SEMICOLON R_BRACKET
   22       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET . RETURN exp SEMICOLON R_BRACKET

    INT               shift, and go to state 22
    BOOLEAN           shift, and go to state 23
    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    RETURN            shift, and go to state 69
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    var_s        go to state 71
    var          go to state 26
    type         go to state 30
    statement_s  go to state 72
    statement    go to state 73
    id           go to state 74


State 64

   24 arg_s: arg_s COMMA type . id

    ID  shift, and go to state 4

    id  go to state 75


State 65

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET . statement_s R_BRACKET R_BRACKET

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement_s  go to state 76
    statement    go to state 73
    id           go to state 77


State 66

   35 statement: IF . L_ROUND exp R_ROUND statement ELSE statement

    L_ROUND  shift, and go to state 78


State 67

   36 statement: WHILE . L_ROUND exp R_ROUND statement

    L_ROUND  shift, and go to state 79


State 68

   37 statement: SYSTEMOUTPRINTLN . L_ROUND exp R_ROUND SEMICOLON

    L_ROUND  shift, and go to state 80


State 69

   22 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET RETURN . exp SEMICOLON R_BRACKET

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 88
    id   go to state 89


State 70

   34 statement: L_BRACKET . statement_s R_BRACKET

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement_s  go to state 90
    statement    go to state 73
    id           go to state 77


State 71

   14 var_s: var_s . var
   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s . statement_s RETURN exp SEMICOLON R_BRACKET
   20       | modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s . RETURN exp SEMICOLON R_BRACKET

    INT               shift, and go to state 22
    BOOLEAN           shift, and go to state 23
    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    RETURN            shift, and go to state 91
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    var          go to state 38
    type         go to state 30
    statement_s  go to state 92
    statement    go to state 73
    id           go to state 74


State 72

   21 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s . RETURN exp SEMICOLON R_BRACKET
   32 statement_s: statement_s . statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    RETURN            shift, and go to state 93
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement  go to state 94
    id         go to state 77


State 73

   33 statement_s: statement .

    $default  reduce using rule 33 (statement_s)


State 74

   31 type: id .
   38 statement: id . EQUALS exp SEMICOLON
   39          | id . L_SQUARE exp R_SQUARE EQUALS exp SEMICOLON

    L_SQUARE  shift, and go to state 95
    EQUALS    shift, and go to state 96

    $default  reduce using rule 31 (type)


State 75

   24 arg_s: arg_s COMMA type id .

    $default  reduce using rule 24 (arg_s)


State 76

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s . R_BRACKET R_BRACKET
   32 statement_s: statement_s . statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70
    R_BRACKET         shift, and go to state 97

    statement  go to state 94
    id         go to state 77


State 77

   38 statement: id . EQUALS exp SEMICOLON
   39          | id . L_SQUARE exp R_SQUARE EQUALS exp SEMICOLON

    L_SQUARE  shift, and go to state 95
    EQUALS    shift, and go to state 96


State 78

   35 statement: IF L_ROUND . exp R_ROUND statement ELSE statement

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 98
    id   go to state 89


State 79

   36 statement: WHILE L_ROUND . exp R_ROUND statement

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 99
    id   go to state 89


State 80

   37 statement: SYSTEMOUTPRINTLN L_ROUND . exp R_ROUND SEMICOLON

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 100
    id   go to state 89


State 81

   53 exp: INTEGER .

    $default  reduce using rule 53 (exp)


State 82

   54 exp: TRUE .

    $default  reduce using rule 54 (exp)


State 83

   55 exp: FALSE .

    $default  reduce using rule 55 (exp)


State 84

   58 exp: NEW . INT L_SQUARE exp R_SQUARE
   59    | NEW . id L_ROUND R_ROUND

    INT  shift, and go to state 101
    ID   shift, and go to state 4

    id  go to state 102


State 85

   57 exp: THIS .

    $default  reduce using rule 57 (exp)


State 86

   61 exp: L_ROUND . exp R_ROUND

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 103
    id   go to state 89


State 87

   60 exp: BANG . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 104
    id   go to state 89


State 88

   22 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp . SEMICOLON R_BRACKET
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 106
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 89

   56 exp: id .

    $default  reduce using rule 56 (exp)


State 90

   32 statement_s: statement_s . statement
   34 statement: L_BRACKET statement_s . R_BRACKET

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70
    R_BRACKET         shift, and go to state 115

    statement  go to state 94
    id         go to state 77


State 91

   20 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN . exp SEMICOLON R_BRACKET

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 116
    id   go to state 89


State 92

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s . RETURN exp SEMICOLON R_BRACKET
   32 statement_s: statement_s . statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    RETURN            shift, and go to state 117
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement  go to state 94
    id         go to state 77


State 93

   21 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN . exp SEMICOLON R_BRACKET

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 118
    id   go to state 89


State 94

   32 statement_s: statement_s statement .

    $default  reduce using rule 32 (statement_s)


State 95

   39 statement: id L_SQUARE . exp R_SQUARE EQUALS exp SEMICOLON

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 119
    id   go to state 89


State 96

   38 statement: id EQUALS . exp SEMICOLON

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 120
    id   go to state 89


State 97

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET . R_BRACKET

    R_BRACKET  shift, and go to state 121


State 98

   35 statement: IF L_ROUND exp . R_ROUND statement ELSE statement
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    R_ROUND   shift, and go to state 122
    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 99

   36 statement: WHILE L_ROUND exp . R_ROUND statement
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    R_ROUND   shift, and go to state 123
    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 100

   37 statement: SYSTEMOUTPRINTLN L_ROUND exp . R_ROUND SEMICOLON
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    R_ROUND   shift, and go to state 124
    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 101

   58 exp: NEW INT . L_SQUARE exp R_SQUARE

    L_SQUARE  shift, and go to state 125


State 102

   59 exp: NEW id . L_ROUND R_ROUND

    L_ROUND  shift, and go to state 126


State 103

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND
   61    | L_ROUND exp . R_ROUND

    R_ROUND   shift, and go to state 127
    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 104

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND
   60    | BANG exp .

    $default  reduce using rule 60 (exp)


State 105

   49 exp: exp L_SQUARE . exp R_SQUARE

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 128
    id   go to state 89


State 106

   22 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON . R_BRACKET

    R_BRACKET  shift, and go to state 129


State 107

   45 exp: exp MINUS . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 130
    id   go to state 89


State 108

   44 exp: exp PLUS . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 131
    id   go to state 89


State 109

   47 exp: exp PERCENT . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 132
    id   go to state 89


State 110

   50 exp: exp DOT . LENGTH
   51    | exp DOT . id L_ROUND R_ROUND
   52    | exp DOT . id L_ROUND exp_s R_ROUND

    LENGTH  shift, and go to state 133
    ID      shift, and go to state 4

    id  go to state 134


State 111

   46 exp: exp STAR . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 135
    id   go to state 89


State 112

   43 exp: exp LESS . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 136
    id   go to state 89


State 113

   42 exp: exp AND . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 137
    id   go to state 89


State 114

   48 exp: exp OR . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 138
    id   go to state 89


State 115

   34 statement: L_BRACKET statement_s R_BRACKET .

    $default  reduce using rule 34 (statement)


State 116

   20 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp . SEMICOLON R_BRACKET
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 139
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 117

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN . exp SEMICOLON R_BRACKET

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 140
    id   go to state 89


State 118

   21 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp . SEMICOLON R_BRACKET
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 141
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 119

   39 statement: id L_SQUARE exp . R_SQUARE EQUALS exp SEMICOLON
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    R_SQUARE  shift, and go to state 142
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 120

   38 statement: id EQUALS exp . SEMICOLON
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 143
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 121

    3 main_class: CLASS id L_BRACKET PUBLIC STATICVOIDMAIN L_ROUND STRING L_SQUARE R_SQUARE id R_ROUND L_BRACKET statement_s R_BRACKET R_BRACKET .

    $default  reduce using rule 3 (main_class)


State 122

   35 statement: IF L_ROUND exp R_ROUND . statement ELSE statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement  go to state 144
    id         go to state 77


State 123

   36 statement: WHILE L_ROUND exp R_ROUND . statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement  go to state 145
    id         go to state 77


State 124

   37 statement: SYSTEMOUTPRINTLN L_ROUND exp R_ROUND . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 125

   58 exp: NEW INT L_SQUARE . exp R_SQUARE

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 147
    id   go to state 89


State 126

   59 exp: NEW id L_ROUND . R_ROUND

    R_ROUND  shift, and go to state 148


State 127

   61 exp: L_ROUND exp R_ROUND .

    $default  reduce using rule 61 (exp)


State 128

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   49    | exp L_SQUARE exp . R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    R_SQUARE  shift, and go to state 149
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 129

   22 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET RETURN exp SEMICOLON R_BRACKET .

    $default  reduce using rule 22 (method)


State 130

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   45    | exp MINUS exp .
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112

    $default  reduce using rule 45 (exp)


State 131

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   44    | exp PLUS exp .
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112

    $default  reduce using rule 44 (exp)


State 132

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   47    | exp PERCENT exp .
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112

    $default  reduce using rule 47 (exp)


State 133

   50 exp: exp DOT LENGTH .

    $default  reduce using rule 50 (exp)


State 134

   51 exp: exp DOT id . L_ROUND R_ROUND
   52    | exp DOT id . L_ROUND exp_s R_ROUND

    L_ROUND  shift, and go to state 150


State 135

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   46    | exp STAR exp .
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    DOT       shift, and go to state 110
    LESS      shift, and go to state 112

    $default  reduce using rule 46 (exp)


State 136

   42 exp: exp . AND exp
   43    | exp . LESS exp
   43    | exp LESS exp .
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    DOT       shift, and go to state 110

    $default  reduce using rule 43 (exp)


State 137

   42 exp: exp . AND exp
   42    | exp AND exp .
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112

    $default  reduce using rule 42 (exp)


State 138

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   48    | exp OR exp .
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113

    $default  reduce using rule 48 (exp)


State 139

   20 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON . R_BRACKET

    R_BRACKET  shift, and go to state 151


State 140

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp . SEMICOLON R_BRACKET
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 152
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 141

   21 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON . R_BRACKET

    R_BRACKET  shift, and go to state 153


State 142

   39 statement: id L_SQUARE exp R_SQUARE . EQUALS exp SEMICOLON

    EQUALS  shift, and go to state 154


State 143

   38 statement: id EQUALS exp SEMICOLON .

    $default  reduce using rule 38 (statement)


State 144

   35 statement: IF L_ROUND exp R_ROUND statement . ELSE statement

    ELSE  shift, and go to state 155


State 145

   36 statement: WHILE L_ROUND exp R_ROUND statement .

    $default  reduce using rule 36 (statement)


State 146

   37 statement: SYSTEMOUTPRINTLN L_ROUND exp R_ROUND SEMICOLON .

    $default  reduce using rule 37 (statement)


State 147

   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND
   58    | NEW INT L_SQUARE exp . R_SQUARE

    L_SQUARE  shift, and go to state 105
    R_SQUARE  shift, and go to state 156
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114


State 148

   59 exp: NEW id L_ROUND R_ROUND .

    $default  reduce using rule 59 (exp)


State 149

   49 exp: exp L_SQUARE exp R_SQUARE .

    $default  reduce using rule 49 (exp)


State 150

   51 exp: exp DOT id L_ROUND . R_ROUND
   52    | exp DOT id L_ROUND . exp_s R_ROUND

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    R_ROUND  shift, and go to state 157
    BANG     shift, and go to state 87

    exp_s  go to state 158
    exp    go to state 159
    id     go to state 89


State 151

   20 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s RETURN exp SEMICOLON R_BRACKET .

    $default  reduce using rule 20 (method)


State 152

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON . R_BRACKET

    R_BRACKET  shift, and go to state 160


State 153

   21 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET statement_s RETURN exp SEMICOLON R_BRACKET .

    $default  reduce using rule 21 (method)


State 154

   39 statement: id L_SQUARE exp R_SQUARE EQUALS . exp SEMICOLON

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 161
    id   go to state 89


State 155

   35 statement: IF L_ROUND exp R_ROUND statement ELSE . statement

    IF                shift, and go to state 66
    WHILE             shift, and go to state 67
    SYSTEMOUTPRINTLN  shift, and go to state 68
    ID                shift, and go to state 4
    L_BRACKET         shift, and go to state 70

    statement  go to state 162
    id         go to state 77


State 156

   58 exp: NEW INT L_SQUARE exp R_SQUARE .

    $default  reduce using rule 58 (exp)


State 157

   51 exp: exp DOT id L_ROUND R_ROUND .

    $default  reduce using rule 51 (exp)


State 158

   40 exp_s: exp_s . COMMA exp
   52 exp: exp DOT id L_ROUND exp_s . R_ROUND

    R_ROUND  shift, and go to state 163
    COMMA    shift, and go to state 164


State 159

   41 exp_s: exp .
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114

    $default  reduce using rule 41 (exp_s)


State 160

   19 method: modifier type id L_ROUND arg_s R_ROUND L_BRACKET var_s statement_s RETURN exp SEMICOLON R_BRACKET .

    $default  reduce using rule 19 (method)


State 161

   39 statement: id L_SQUARE exp R_SQUARE EQUALS exp . SEMICOLON
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE   shift, and go to state 105
    SEMICOLON  shift, and go to state 165
    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PERCENT    shift, and go to state 109
    DOT        shift, and go to state 110
    STAR       shift, and go to state 111
    LESS       shift, and go to state 112
    AND        shift, and go to state 113
    OR         shift, and go to state 114


State 162

   35 statement: IF L_ROUND exp R_ROUND statement ELSE statement .

    $default  reduce using rule 35 (statement)


State 163

   52 exp: exp DOT id L_ROUND exp_s R_ROUND .

    $default  reduce using rule 52 (exp)


State 164

   40 exp_s: exp_s COMMA . exp

    INTEGER  shift, and go to state 81
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NEW      shift, and go to state 84
    THIS     shift, and go to state 85
    ID       shift, and go to state 4
    L_ROUND  shift, and go to state 86
    BANG     shift, and go to state 87

    exp  go to state 166
    id   go to state 89


State 165

   39 statement: id L_SQUARE exp R_SQUARE EQUALS exp SEMICOLON .

    $default  reduce using rule 39 (statement)


State 166

   40 exp_s: exp_s COMMA exp .
   42 exp: exp . AND exp
   43    | exp . LESS exp
   44    | exp . PLUS exp
   45    | exp . MINUS exp
   46    | exp . STAR exp
   47    | exp . PERCENT exp
   48    | exp . OR exp
   49    | exp . L_SQUARE exp R_SQUARE
   50    | exp . DOT LENGTH
   51    | exp . DOT id L_ROUND R_ROUND
   52    | exp . DOT id L_ROUND exp_s R_ROUND

    L_SQUARE  shift, and go to state 105
    MINUS     shift, and go to state 107
    PLUS      shift, and go to state 108
    PERCENT   shift, and go to state 109
    DOT       shift, and go to state 110
    STAR      shift, and go to state 111
    LESS      shift, and go to state 112
    AND       shift, and go to state 113
    OR        shift, and go to state 114

    $default  reduce using rule 40 (exp_s)
